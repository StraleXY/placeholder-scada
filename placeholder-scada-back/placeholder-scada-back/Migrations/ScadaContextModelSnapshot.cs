// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using placeholder_scada_back.Context;

#nullable disable

namespace placeholder_scada_back.Migrations
{
    [DbContext(typeof(ScadaContext))]
    partial class ScadaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("placeholder_scada_back.Entities.Alarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnalogInputId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int")
                        .HasColumnName("priority");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.Property<float>("Threshold")
                        .HasColumnType("real")
                        .HasColumnName("threshold");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("AnalogInputId");

                    b.ToTable("alarm");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.AnalogInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("int")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int>("Function")
                        .HasColumnType("int")
                        .HasColumnName("function");

                    b.Property<float>("HighLimit")
                        .HasColumnType("real")
                        .HasColumnName("high_limit");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit")
                        .HasColumnName("is_on");

                    b.Property<float>("LowLimit")
                        .HasColumnType("real")
                        .HasColumnName("low_limit");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int")
                        .HasColumnName("scan_time");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("units");

                    b.Property<bool>("UseRtu")
                        .HasColumnType("bit")
                        .HasColumnName("use_rtu");

                    b.HasKey("Id");

                    b.ToTable("analog_input");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.AnalogOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("int")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<float>("HighLimit")
                        .HasColumnType("real")
                        .HasColumnName("high_limit");

                    b.Property<float>("InitialValue")
                        .HasColumnType("real")
                        .HasColumnName("initial_value");

                    b.Property<float>("LowLimit")
                        .HasColumnType("real")
                        .HasColumnName("low_limit");

                    b.Property<string>("Units")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("units");

                    b.HasKey("Id");

                    b.ToTable("analog_output");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.AnalogValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_time");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.Property<float>("Value")
                        .HasColumnType("real")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("analog_value");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.DigitalInput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("int")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("IsOn")
                        .HasColumnType("bit")
                        .HasColumnName("is_on");

                    b.Property<int>("ScanTime")
                        .HasColumnType("int")
                        .HasColumnName("scan_time");

                    b.Property<bool>("UseRtu")
                        .HasColumnType("bit")
                        .HasColumnName("use_rtu");

                    b.HasKey("Id");

                    b.ToTable("digital_input");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.DigitalOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Address")
                        .HasColumnType("int")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<bool>("InitialValue")
                        .HasColumnType("bit")
                        .HasColumnName("initial_value");

                    b.HasKey("Id");

                    b.ToTable("digital_output");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.DigitalValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_time");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.Property<bool>("Value")
                        .HasColumnType("bit")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("digital_value");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.RealTimeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAnalog")
                        .HasColumnType("bit")
                        .HasColumnName("is_analog");

                    b.Property<int>("TagId")
                        .HasColumnType("int")
                        .HasColumnName("tag_id");

                    b.Property<int>("WriteTime")
                        .HasColumnType("int")
                        .HasColumnName("write_time");

                    b.HasKey("Id");

                    b.ToTable("real_time_unit");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.TriggeredAlarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlarmId")
                        .HasColumnType("int")
                        .HasColumnName("alarm_id");

                    b.Property<float>("TagValue")
                        .HasColumnType("real")
                        .HasColumnName("tag_value");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.ToTable("triggered_alarm");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<int>("Role")
                        .HasColumnType("int")
                        .HasColumnName("role");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.Alarm", b =>
                {
                    b.HasOne("placeholder_scada_back.Entities.AnalogInput", null)
                        .WithMany("Alarms")
                        .HasForeignKey("AnalogInputId");
                });

            modelBuilder.Entity("placeholder_scada_back.Entities.AnalogInput", b =>
                {
                    b.Navigation("Alarms");
                });
#pragma warning restore 612, 618
        }
    }
}
